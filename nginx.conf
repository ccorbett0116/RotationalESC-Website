# Production nginx configuration with remote backend
# Replace ${BACKEND_HOST} with your backend server's private IP/hostname

# Reject requests to IP address - return 444 (connection closed)
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;
    
    # SSL configuration for HTTPS requests to IP
    ssl_certificate /etc/letsencrypt/live/${PRODUCTION_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PRODUCTION_DOMAIN}/privkey.pem;
    
    return 444;
}

# HTTP server - redirect all traffic to HTTPS except ACME challenges
server {
    listen 80;
    server_name ${PRODUCTION_DOMAIN} www.${PRODUCTION_DOMAIN};
    
    # Set maximum file upload size to 100MB (for any uploads before redirect)
    client_max_body_size 100M;

    # Allow Let's Encrypt challenges - MUST come before redirect
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
        allow all;
    }

    # Health check endpoint for load balancers
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name ${PRODUCTION_DOMAIN} www.${PRODUCTION_DOMAIN};
    
    # Set maximum file upload size to 100MB
    client_max_body_size 100M;

    # SSL configuration - use production domain for certificate paths
    ssl_certificate /etc/letsencrypt/live/${PRODUCTION_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PRODUCTION_DOMAIN}/privkey.pem;
    
    # SSL settings for security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # GZIP Compression for performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/ttf
        font/otf
        font/woff
        font/woff2;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to environment and config files
    location ~* \.(env|yml|yaml|json|log|bak|backup|old|tmp|temp|sql|sqlite|db)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to common sensitive directories
    location ~* /(config|configs|configuration|settings|backup|backups|logs|database)/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Proxy Django static files to backend server
    location /static/ {
        proxy_pass http://${BACKEND_HOST}:8000/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static files
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # Proxy media files to backend server
    location /media/ {
        proxy_pass http://${BACKEND_HOST}:8000/media/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy admin requests to Django backend on private network
    location /admin/ {
        client_max_body_size 100M;
        proxy_pass http://${BACKEND_HOST}:8000/admin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Set timeouts for admin interface
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Analytics API endpoints - NEVER cache these
    location /api/analytics/ {
        client_max_body_size 100M;
        proxy_pass http://${BACKEND_HOST}:8000/api/analytics/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Ensure analytics requests are never cached
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        proxy_cache_bypass 1;
        proxy_no_cache 1;
    }

    # Gallery image endpoints - cache heavily for performance
    location ~* /api/(gallery|new-gallery)/\d+/image/ {
        proxy_pass http://${BACKEND_HOST}:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Enable proxy caching for images
        proxy_cache_valid 200 24h;
        proxy_cache_valid 404 1m;
        proxy_cache_key "$scheme$proxy_host$request_uri";
        proxy_cache_bypass $http_pragma $http_authorization;
        proxy_cache_revalidate on;
        proxy_cache_lock on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        
        # Add cache headers for client-side caching
        add_header Cache-Control "public, max-age=86400, immutable" always;
        add_header Vary "Accept-Encoding" always;
        
        # Enable compression for images
        gzip on;
        gzip_vary on;
        gzip_types image/svg+xml;
    }

    # Proxy other API requests to Django backend on private network
    location /api/ {
        client_max_body_size 100M;
        proxy_pass http://${BACKEND_HOST}:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Set reasonable timeouts for API calls
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Cache frontend static assets with versioning (exclude /static/ and /media/ paths)
    location ~* ^(?!/static/)(?!/media/).*\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        access_log off;
    }
    
    # Cache sitemap and robots with shorter expiry
    location ~* \.(xml|txt)$ {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
    }

    # Serve HTML files with no cache (for SPA updates)
    location ~* \.html$ {
        root /usr/share/nginx/html;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
        add_header Last-Modified $date_gmt;
        add_header ETag off;
        if_modified_since off;
    }

    # Serve static files and SPA routes
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # No cache for the main HTML file and SPA fallback
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
        add_header Last-Modified $date_gmt;
        add_header ETag off;
        if_modified_since off;
    }
}