services:
  backend:
    image: ghcr.io/ccorbett0116/rotationalesc-website/backend:latest
    container_name: rotational-backend
    ports:
      - "8000:8000"
    volumes:
      - ./database:/app/database
      - ./backend/media:/app/media
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG:-True}
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,${PRODUCTION_DOMAIN},www.${PRODUCTION_DOMAIN}
    networks:
      - rotational-network

  frontend:
    image: ghcr.io/ccorbett0116/rotationalesc-website/frontend:latest
    container_name: rotational-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf.template:ro
    depends_on:
      - backend
    env_file:
      - .env
    networks:
      - rotational-network
    entrypoint: ["/nginx-entrypoint.sh"]

  certbot:
    build:
      context: ./certbot
      dockerfile: Dockerfile
    container_name: rotational-certbot
    volumes:
      - ./certbot/certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/logs:/var/log/letsencrypt
      - ./certbot-entrypoint.sh:/custom-entrypoint.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - .env
    environment:
      - EMAIL=${OWNER_EMAIL}
      - DOMAIN=${PRODUCTION_DOMAIN}
    networks:
      - rotational-network
    entrypoint: ""
    command: ["/bin/sh", "/custom-entrypoint.sh"]
    restart: unless-stopped
    depends_on:
      - frontend

networks:
  rotational-network:
    driver: bridge
