# Generated by Django 5.2.5 on 2025-09-03 03:19

from django.db import migrations


def migrate_material_to_specification(apps, schema_editor):
    """
    Move material data from Product model to ProductSpecification model
    """
    Product = apps.get_model('products', 'Product')
    ProductSpecification = apps.get_model('products', 'ProductSpecification')
    
    for product in Product.objects.all():
        if product.material and product.material.strip():
            # Check if a material specification already exists for this product
            existing_spec = ProductSpecification.objects.filter(
                product=product, 
                key='Material'
            ).first()
            
            if not existing_spec:
                # Create a new specification for the material
                ProductSpecification.objects.create(
                    product=product,
                    key='Material',
                    value=product.material,
                    order=0  # Give material specification priority order
                )


def reverse_migrate_material_to_specification(apps, schema_editor):
    """
    Reverse migration: move material data back from ProductSpecification to Product
    """
    Product = apps.get_model('products', 'Product')
    ProductSpecification = apps.get_model('products', 'ProductSpecification')
    
    for product in Product.objects.all():
        material_spec = ProductSpecification.objects.filter(
            product=product,
            key='Material'
        ).first()
        
        if material_spec:
            product.material = material_spec.value
            product.save()
            # Don't delete the specification in reverse migration to be safe


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0002_migrate_material_to_specification'),
    ]

    operations = [
        migrations.RunPython(
            migrate_material_to_specification,
            reverse_migrate_material_to_specification
        ),
    ]
